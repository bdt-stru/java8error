<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>java8err</groupId>
	<artifactId>java8err</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<properties>
		<server.dir>${project.build.directory}/staging/server</server.dir>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<spring.version>4.1.2.RELEASE</spring.version>
	</properties>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<compilerVersion>1.7</compilerVersion>
					<source>1.7</source>
					<target>1.7</target>
					<testSource>1.7</testSource>
					<testTarget>1.7</testTarget>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
					<fork>true</fork>
				</configuration>
			</plugin>

			<!-- 0. copy built jar to target/staging/... -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>copy-build-jar</id>
						<phase>package</phase>
						<configuration>
							<target>
								<mkdir dir="${server.dir}/lib" />
								<copy failonerror="true" verbose="true" file="${project.build.directory}/${project.artifactId}-${project.version}.jar" todir="${server.dir}/lib" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- 1. copy resources to target/staging/... -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>

					<!-- copy resources to target/staging/prof -->
					<execution>
						<id>resources</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>

						<configuration>
							<encoding>UTF-8</encoding>
							<outputDirectory>${server.dir}</outputDirectory>
							<resources>
								<resource>
									<directory>jnlp</directory>
									<filtering>true</filtering>
								</resource>
								<resource>
									<directory>service</directory>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- 2. copy dependencies (jars) to target/staging/... -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.8</version>
				<executions>
					<execution>
						<id>dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
							<!-- <goal>tree</goal> -->
						</goals>
						<configuration>
							<excludeGroupIds>org.codehaus.izpack</excludeGroupIds>
							<outputDirectory>${server.dir}/lib</outputDirectory>
							<includeScope>runtime</includeScope>
							<useSubDirectoryPerScope>false</useSubDirectoryPerScope>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Add manifest entries -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>add-trusted-library-attributes</id>
						<phase>verify</phase>
						<configuration>
							<target>
								<ant antfile="${basedir}/build-trusted.xml">
									<target name="addTrustedLibraries" />
								</ant>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>ant-contrib</groupId>
						<artifactId>ant-contrib</artifactId>
						<version>1.0b3</version>
						<exclusions>
							<exclusion>
								<groupId>ant</groupId>
								<artifactId>ant</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
					<dependency>
						<groupId>org.apache.ant</groupId>
						<artifactId>ant-nodeps</artifactId>
						<version>1.8.1</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- 3. Sign all jars -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jarsigner-plugin</artifactId>
				<version>1.3.2</version>
				<executions>
					<execution>
						<id>sign-jars</id>
						<phase>verify</phase>
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<skip>false</skip>
					<verbose>true</verbose>
					<archiveDirectory>${server.dir}/lib</archiveDirectory>
					<!-- <excludes> -->
					<!-- <exclude>**/jetty*.jar</exclude> -->
					<!-- <exclude>**/*servlet*.jar</exclude> -->
					<!-- </excludes> -->
					<keystore>unimportant_weak.keystore</keystore>
					<alias>somealias</alias>
					<storepass>somepassstore</storepass>
					<keypass>somepasskey</keypass>
					<removeExistingSignatures>true</removeExistingSignatures>
					<!-- <arguments> -->
					<!-- <argument>-tsa</argument> -->
					<!-- <argument>http://tsa.example.com/</argument> -->
					<!-- </arguments> -->
				</configuration>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>org.eclipse.jetty.aggregate</groupId>
			<artifactId>jetty-all</artifactId>
			<version>8.1.16.v20140903</version>
		</dependency>
		<dependency>
			<!-- includes jdflib -->
			<groupId>org.cip4.lib.ptk</groupId>
			<artifactId>PrintTalkJ</artifactId>
			<version>2.1.4a.76</version>
		</dependency>
		<!-- <dependency> -->
		<!-- <groupId>javax.jnlp</groupId> -->
		<!-- <artifactId>jnlp-api</artifactId> -->
		<!-- <version>version_same_as_jre</version> -->
		<!-- <scope>system</scope> -->
		<!-- <systemPath>${java.home}/lib/javaws.jar</systemPath> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>com.oracle.deploy.update</groupId> -->
		<!-- <artifactId>deploy-api</artifactId> -->
		<!-- <version>version_same_as_jre</version> -->
		<!-- <scope>system</scope> -->
		<!-- <systemPath>${java.home}/lib/deploy.jar</systemPath> -->
		<!-- </dependency> -->
	</dependencies>
</project>